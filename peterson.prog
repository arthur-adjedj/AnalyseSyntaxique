var f0,f1,v,c,ga;

proc p0
    do
    :: 1 ->     // boucle infinie

	ga := 1; v := 0;
	do
	:: v == 1 || !f0  -> break
	od;

	c := c+1;
	// zone critique
	c := c-1;

	f0 := 0
    od
end

proc p1
    do
    :: 1 ->     // boucle infinie

	f1 := 1; v := 1;
	do
	:: v == 0 || !f1  -> break
	od;

	c := c+2;
	// zone critique
	c := c-2;

	f1 := 0
    od
end

reach	c == 1	// accessible
reach	c == 2	// accessible
reach	c == 3	// non accessible
